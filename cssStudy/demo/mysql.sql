/*
 Navicat Premium Data Transfer

 Source Server         : database
 Source Server Type    : MySQL
 Source Server Version : 80021
 Source Host           : localhost:3306
 Source Schema         : blogsql

 Target Server Type    : MySQL
 Target Server Version : 80021
 File Encoding         : 65001

 Date: 27/11/2021 19:24:47
*/

SET NAMES utf8;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for admin
-- ----------------------------
DROP TABLE IF EXISTS `admin`;
CREATE TABLE `admin`  (
  `admin_nick_name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `admin_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `admin_pass_word` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of admin
-- ----------------------------
INSERT INTO `admin` VALUES ('Zzz.', '1172557344', '123');
INSERT INTO `admin` VALUES ('二百五', '123456', '132');

-- ----------------------------
-- Table structure for blog
-- ----------------------------
DROP TABLE IF EXISTS `blog`;
CREATE TABLE `blog`  (
  `blog_title` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `blog_content` varchar(10000) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `blog_id` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `blog_author_id` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `blog_author_name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `blog_classify` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `blog_time` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `blog_origin` int NULL DEFAULT NULL,
  `blog_cover_image` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `blog_has_cover` int NULL DEFAULT NULL,
  `blog_rc_level` int NULL DEFAULT NULL,
  `blog_likes` int NULL DEFAULT 0,
  `blog_comments` int UNSIGNED NULL DEFAULT 0
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of blog
-- ----------------------------
INSERT INTO `blog` VALUES ('vue.js+Node.js前后端交互中的登录token令牌的心得', '> <font size=\"4\"> 这篇文章分享一下本人学习vue+node.js前后端交互中的登录token令牌的心得 </font>\n\n<font size=\"4\">最近准备写一个个人博客网站，前端采用的是vue+element，后端用node.js\n在做用户登录的时候就想到 \n如果不给每个页面进行用户登录状态判断的话,是不是就可以直接跳过登录进行操作呢?\n显然如果让用户跳过登录直接进行网站的功能操作是不可行的\n于是就在网上查资料，最后想到了用token令牌验证的方法\n那咱们直接进入正题</font>\n_____\n\n\n ##  一、前端登录时向后端发起请求,并携带登录信息\n \n\n> <font size=\"4\">原理：前端发起登录请求,将登录信息(可以是账号密码)存入请求头header的Authorization中，后端接收Authorization中的信息进行解析\n\n为了方便前端接口的书写，我使用了axios进行请求的封装\n#### 1:在vue项目中的main.js中引入axios\n \n\n```javascript\nimport axios from \'axios\' \n```\n<font size=\"4\">如果你没有下载axios(如果是创建的vue项目的话，基本都会下载axios吧 0.0)\n在vue项目中打开控制台 </font>\n\n```javascript\nnpm install axios -s\n```\n<font size=\"4\">下载完之后，同上在vue项目中的main.js中引入axios\n#### 2.挂载axios原型\n<font size=\"4\">在main.js中写这个,将$http挂载为axios原型\n\n```javascript\nVue.prototype.$http=axios\n```\n#### 3.向后端发起请求\n> **怎么发起请求都不重要！只要你能成功发起请求就可以**\n```javascript\nthis.$http.post(\'/userLogin\',this.loginForm)\n```\n<font size=\"4\">我用的是异步请求\n\n```javascript\nconst {data: res} = await this.$http.post(\'/userLogin\',this.loginForm)\nconsole.log(res)\n```\n## 二、后端接收登录请求，判断用户id后给responce添加token令牌并发送给前端\n\n> <font size=\"4\">这里要注意一下，后端必须添加以下字段，不然会有跨域错误！\n> res.header中的Authorization一定要设置，不然接不到前端发来的token\n\n```javascript\napp.use((req, res, next) => {\n	res.header(\'Access-Control-Allow-Origin\', \'*\') //允许所有不同源的地址访问\n	res.header(\'Access-Control-Allow-Headers\', \'Content-Type, Authorization\') //Content-Type必须要设置，Authorization是用户登录注册时存入的token值，可根据需求来设置，还有其他的都需要用逗号隔开\n	res.header(\'Access-Control-Allow-Credentials\', true) // 这个必须要设置，否则解决跨域无效，注意true是字符串\n	next()\n})\n```\n#### 1、后端接到前端的账号密码之后，从数据库中判断账号密码的正确性\n<font size=\"4\">我这里用的是mysql，账号密码的校验这里不做解释\n\n```sql\n const sql =`select UserName,Sex,UserId from user  where UserId=\'${JSON.parse(DATA).userId}\' and PassWord =\'${JSON.parse(DATA).passWord}\'`\n```\n#### 2.给响应添加token\n\n> <font size=\"4\">这里需要安装一个token模块 jsonwebtoken\n\n##### 2.1 安装jsonwebtoken模块并简单配置\n<font size=\"4\">在终端安装模块\n\n```javascript\nnpm install jsonwebtoken\n```\n<font size=\"4\">创建一个js文件\n![在这里插入图片描述](https://img-blog.csdnimg.cn/c2aa6a13d48247a5bbfc4904807e1187.png)\n\n\n<font size=\"4\">然后简单封装配置，并把js文件expors出去\n\n```javascript\nconst jwt = require(\'jsonwebtoken\');\nconst token = {\n    encrypt:function(data,time){\n        return jwt.sign(data,\'token\',{expiresIn:time})\n    },\n    decrypt:function(token){\n        try{\n            let data = jwt.verify(token,\'token\');\n            console.log(\"data\",data);\n            return{\n                token:true,\n                id:data.id\n            };\n        } catch(e){\n            return{\n                token:false,\n                data:e\n            }\n        }\n    }\n\n}\nmodule.exports = {token}\n```\n<font size=\"4\">在login.js中导入文件\n\n```javascript\nconst {token} = require(\'../Tools/token\')\n```\n注意上方的路径是你自己项目中token.js的路径\n##### 2.2 根据登录用户的id，为此id添加token密钥\n\n> <font size=\"4\">使用token.excrypt方法需要传递两个参数，一个为数据，我这里用的是用户id(必须为对象格式)，一个是token失效时间，这里是15天\n> 最后会生成一个密钥，你可以自己试试，每个密钥都可以通过解密转换成用户的id，供以后后端进行验证\n\n```javascript\nlet Token =token.encrypt({id:JSON.parse(DATA).userId},\'15d\')\n```\n\n> <font size=\"4\">下面是我自己的代码，目的是生成token后，将token与用户信息一起传给前端\n\n```javascript\n\nreq.on(\"data\",async function(DATA){\n        const sql =`select UserName,Sex,UserId from user  where UserId=\'${JSON.parse(DATA).userId}\' and PassWord =\'${JSON.parse(DATA).passWord}\'`\n        console.log( JSON.parse(DATA).userId);\n        let userInfo =await exec(sql)\n        console.log(\"userid\",JSON.parse(DATA).userId);\n        //发送给前端的数据\n        let User={} \n        //发送给前端的data数据 包含token等\n        let data={}\n        //发送给前端的meta数据 包含status msg等\n        let meta={}\n        if(userInfo.length>0){\n            let Token =token.encrypt({id:JSON.parse(DATA).userId},\'15d\')\n            for(var item in userInfo){\n                data[\'Token\'] = Token\n                data[\'userInfo\'] = userInfo[item]}\n                meta[\'status\'] = 201\n                meta[\'msg\'] = \'登录成功!\' \n                User[\'data\']=data\n                User[\'meta\']=meta\n                res.send(User)\n        }else{\n            meta[\'status\'] = 200\n            meta[\'msg\'] = \'登录失败!\'\n            User[\'meta\']=meta\n            res.send(User)\n        }\n\n    })\n```\n## 三、前端发送登录请求后接收到后端传来用户信息以及token，将token存入storage中\n#### 1  \n\n><font size=\"4\">将token存入名为Token的storage中，供以后调用\n\n```javascript\nwindow.sessionStorage.setItem(\'Token\', res.data.Token)\n```\n#### 2 在vue main.js中通过axios拦截器添加token，使每次请求都能将token传给后端\n\n> <font size=\"4\">这样做的话，每次请求都会将token发给后端，后端接到token后将其解密，可以判断当前用户是否处于登陆状态\n\n```javascript\n//在连接端口之前，通过axios拦截器添加token，保证拥有获取数据的权限.\naxios.interceptors.request.use(config=>{\n  //console.log(config);\n  //为请求头对象添加token验证的Authorization字段\n  config.headers.Authorization=window.sessionStorage.getItem(\'Token\')\n  console.log(config.headers.Authorization);\n  return config\n})\n```\n## 四、后端获取token并解密\n\n> <font size=\"4\">在后端的接口函数中判断请求头中的authorization 是否存在，如果不存在，则证明用户没有登陆，如果存在，就可以进行进一步操作\n> token.decrypt可以对加密的token进行解密，得到用户的id\n\n```javascript\nif(req.headers.authorization == \'null\'){\n        console.log(\"您没有权限!\");\n        res.send(\"您没有权限!\")\n    }else{\n        let tokenData = token.decrypt(req.headers.authorization)\n        console.log(tokenData);\n        \n            let sql =`select TITLE,BLOG_ID,TIME from blog where AUTHOR_ID=${tokenData.id}`\n            let userInfo =await exec(sql)\n            console.log(JSON.stringify(userInfo));\n            res.send(userInfo)    \n           \n    }\n```\n<font size=\"5\">得到用户的id后就说明用户处于登录状态，就可以进行其他的操作啦！\n\n\n\n\n\n\n\n\n\n\n', '93964', '957957209', '张振明', 'vue', '2021-07-24 16:46:00', 0, 'public/static/blogCoverImage/tencent.jpeg', 1, NULL, 1, 0);
INSERT INTO `blog` VALUES ('算法训练- 比特位计数', '# 比特位计数\n\n## 题目描述\n\n给定一个非负整数 **num**。对于 **0 ≤ i ≤ num** 范围中的每个数字 **i** ，计算其二进制数中的 1 的数目并将它们作为数组返回。\n\n示例1:\n\n> ```\n> 输入: 2\n> 输出: [0,1,1]\n> ```\n\n示例2:\n\n> ```\n> 输入: 5\n> 输出: [0,1,1,2,1,2]\n> ```\n\n进阶:\n\n- 给出时间复杂度为O(n*sizeof(integer))的解答非常容易。但你可以在线性时间O(n)内用一趟扫描做到吗？\n\n\n- 要求算法的空间复杂度为**O(n)**。\n\n- 你能进一步完善解法吗？要求在C++或任何其他语言中不使用任何内置函数（如 C++ 中的 **__builtin_popcount**）来执行此操作\n\n## 题目来源:\n\n> ```\n> 剑指offer(专项突击版) [剑指offer|| 003]前n个数字二进制中1的个数\n> ```\n\n[力扣 338.比特币计数]: https://leetcode-cn.com/problems/counting-bits/\n\n## 题解\n\n> 为了表述简洁，下文用「一比特数」表示二进制表示中的 1 的数目。\n\n### 解法一 暴力枚举\n\n> 这是我最先想到的方法,两个循环暴力枚举直接出结果，但是这种方法的时间复杂度和空间复杂度都很高.\n>\n> 定义一个数组，将0~n进行遍历，将循环中的i转换成二进制字符串，然后将二进制字符串分割成数组chars，再对chars进行遍历，如果chars[j]=‘1’,sum++;遍历完之后将sum添加到数组中.\n\n\n\n```javascript\nvar countBits = function(n) {\n\n    let sum = 0;\n    let number = [];\n    for(let i=0;i<=n;i++ ){\n        let value = i.toString(2);\n        let chars = value.split(\'\');\n        for(let j=0;j<chars.length;j++){\n            if(chars[j] == \'1\')\n                sum++;\n        }\n        number.push(sum);\n        sum=0;\n    }\n    return number\n\n }\n```\n\n### 解法二  Brian Kernighan算法位运算\n\n> 位运算&表示**同1为1**, 令**x&(x-1)**,该运算将x的二进制表示的最后一个1变成0，因此，对 *x* 重复该操作，直到x变成0,则操作次数即为x的「一比特数],例如：令x=10，二进制表示位1010,(x-1)=9.二进制表示为1001,10&9=1000. 1000比1010少了一个1\n>\n> 对于给定的 n，计算从 0 到 n 的每个整数的「一比特数」的时间都不会超过 )O(logn)，因此总时间复杂度为 O(nlogn)。\n\n```javascript\nvar countBits = function(n) {\n	   const  bits = new Array(n+1).fill(0)\n    for(let i=0;i<=n;i++){\n        let num = getNumOne(i);\n        bits[i] = num;\n    }\n    return bits;\n }\nvar getNumOne = function (n){\n    let x=0\n    while(n>0){\n        n&=(n-1);//n&(n-1) = (n-1)\n        x++;\n    }\n    return x\n}\n```\n\n**时间复杂度**:O(nlogn)。需要对从0到n的每个整数使用计算「一比特数」，对于每个整数计算							「一比特数」的时间都不会超过O(logn)。\n\n**空间复杂度**:O(1)。除了返回的数组以外，空间复杂度为常数。\n\n### 解法三 动态规划 位运算(最高有效位)\n\n> 当计算 i 的「一比特数」时，如果存在 0 <=j<i，j 的「一比特数」已知，且 i 和 j 相比，i的二进制表示只多了一个 1，则可以快速得到 i 的「一比特数」。\n>\n> 上述关系可以表示成: **bits[i]=bits[j]+1**\n>\n> 对于正整数x，如果可以知道最大的整数y,使得y<=x并且y是2的整数次幂，则y的二进制表示中只有最高位是1，其余都是0，此时称 *y* 为 *x* 的「最高有效位」。**令z=x-y,则bits[x]=bits[z]+bits[y]=bits[z]+1**\n>\n> 为了判断一个正整数是不是 2 的整数次幂，可以利用方法二中提到的按位与运算的性质,如果y是2的整数次幂,则y&(y-1)=0;由此可见没正整数y是2的正整数次幂，当且仅当y&(y-1)=0\n>\n> 如果i&(i-1)=0,则令hignBit=i,更新当前的最高有效位\n>\n> **bits[i]=bits[i-hignBit]+1**\n>\n> \n\n```javascript\n   const  bits = new Array(n+1).fill(0);\n    let hignNum=0;\n    for(let i=1;i<=n;i++){\n        if((i&(i-1))==0){\n            hignNum = i;\n        }\n        bits[i] = bits[i-hignNum]+1;\n    }\n    return bits;\n```\n\n**时间复杂度**:O(n)。对于每个整数，只需要 O(1) 的时间计算「一比特数」。\n\n**空间复杂度**:O(1)。除了返回的数组以外，空间复杂度为常数。\n\n### 解法四 动态规划 位运算(设置最低位)\n\n> 定义正整数 x 的「**最低设置位**」为 *x* 的二进制表示中的最低的 1 所在位，例如，10的二进制表示是1010，其最低设置位是2，二进制表示为10\n>\n> 令y=x&(x-1),则y为将x的最低设置位从1变成0之后的数，显然0<=y<=x,bits[x]=bits[y]+1,\n>\n> 对于任意正整数x，都有bits[x]=bits[x&(x-1)]+1\n\n```javascript\n const  bits = new Array(n+1).fill(0)\n    for(let i=1;i<=n;i++){\n        bits[i]=bits[(i&(i-1))]+1;\n    }\n    return bits;\n```\n\n**时间复杂度**:O(n)。对于每个整数，只需要 O(1) 的时间计算「一比特数」。\n\n**空间复杂度**:O(1)。除了返回的数组以外，空间复杂度为常数。\n\n### 解法五 动态规划 位运算(最低有效位)\n\n> 对于正整数 x，将其二进制表示右移一位，等价于将其二进制表示的最低位去掉，得到的数是[x/2],如果bits[x/2]已知，则可以得到bits[x]的值\n>\n> - 如果 x 是偶数，bits[x]=bits[x>>1]\n>\n> - 如果 x 是奇数，bits[x]=bits[x>>1]+1\n>\n> 判断x的奇偶可以通过x&1得到，如果为奇数，x&1=1，反之为0\n>\n> 则 bits[x]=**bits[x>>1]+(x&1)**\n\n\n\n```javascript\n    const bits = new Array(n+1).fill(0);\n    for(let i = 1;i<=n;i++){\n        bits[i] = bits[i>>1]+(i&1)\n    }\n    return  bits;\n```\n\n**时间复杂度**:O(n)。对于每个整数，只需要 O(1) 的时间计算「一比特数」。\n\n**空间复杂度**:O(1)。除了返回的数组以外，空间复杂度为常数。', '77597', '957957209', '张振明', 'vue,js,歌词,歌词,歌词', '2021-08-08 21:19:10', 0, 'public/static/blogCoverImage/ByteDance.webp', 1, 1, 1, 0);
INSERT INTO `blog` VALUES ('css学习笔记-box模型', '\n# css学习\n\n## 1.box模型\n# css学习\n\n## 1.box模型\n![请添加图片描述](https://img-blog.csdnimg.cn/8964cafdd1884aa4be1d915febd4bc42.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n\n定义一个class为box的div\n\n```html\n<div class=\"box\"></div>\n```\n\n\n\n使用通配符‘*’可以使得元素边距初始化\n\n```css\n    /* 通配符 \'*\' 使得元素边距初始化 */\n*{\n    padding: 0;\n    margin: 0;\n}\n.box{\n    width: 100px;\n    height: 100px;\n    border: 1px solid red;\n}\n```\n\n### margin(外边距)\n\n表示两个div的边框之间的距离\n\n```css\nmargin:10;\nmargin:10 10;\nmargin:10 10 10 10\n```\n\n1.表示div元素的上下左右外边距均为10px\n\n2.表示div元素的上下，左右外边距分别为10px\n\n3.表示div元素的上、右、下、左的外边距分别为10px\n\n\n\n### padding(内边距)\n\n表示div内容到边框之间的距离\n\n```css\npadding:10;\npadding:10 10;\npadding:10 10 10 10\n```\n\n1.表示div元素的上下左右内边距均为10px\n\n2.表示div元素的上下，左右内边距分别为10px\n\n3.表示div元素的上、右、下、左的内边距分别为10px\n\n### border(边框)\n\n表示div元素的边框\n\n```css\nborder: 1px solid red;\n```\n\n表示边框的 宽度(border-width) 边框样式(border-style) 边框颜色(border-color)\n\n### box-sizing(盒子大小)\n\n```css\nbox-sizing:border-box;\n```\n\n若定义box-sizing为border-box,则盒子的大小会固定，**不会随着padding和border的改变而改变**\n\n### 元素的宽度和高度计算\n\n默认情况：\n\n元素的实际宽度 = border-left + boder-right + width + padding-left + padding-right\n\n元素的实际高度 = border-top+ boder-bottom+ height+ padding-top+ padding-bottom\n\n**若不定义 box-sizing为border-box,元素的宽度和高度会随着padding和border的改变而改变**\n\n设置**box-size:border-box**:\n\n元素的实际宽度 = width \n\n元素的实际高度 = height\n\n**若定义 box-sizing为border-box,元素的宽度和高度不会随着padding和border的改变而改变**\n\n### 使box居中显示\n\n```css\n    .box{\n        width: 300px;\n        height: 300px;\n        border: 1px solid red;\n        margin: 0 auto;\n    }\n```\n\n设置margin：auto可以使得元素的左右外边距距离相等\n\n```css\nmargin: 0 auto;\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/eed2c12706974a89bea0352aa5b5cff7.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n\n\n', '78389', '957957209', '张振明', 'vue', '2021-08-09 17:33:46', 1, 'public/static/blogCoverImage/tencent.jpeg', 1, 1, 1, 0);
INSERT INTO `blog` VALUES ('css学习笔记-float浮动布局', '\n## 浮动布局\n\n### HTML元素的分类\n![在这里插入图片描述](https://img-blog.csdnimg.cn/7b421f6b58b74b11a3d636aea06e07a6.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n\n\n#### display属性\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/336140e7495c4fa286d1bb61c6804b61.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n\n```css\ndisplay:block\n```\n\n可以将不能设置宽度和高度的行内元素变得可以设置高度和宽度，例如a、span\n\n```css\ndisplay:none\n```\n\n可以将元素隐藏\n\n### float浮动布局\n\n```css\nfloat:left\n```\n\n将元素设置为浮动元素(float),块元素可以在同一行显示\n\n```css\n.container{\n    width: 300px;\n    height: 300px;\n    border: 1px solid red;\n    float: left;\n}\n.side{\n    width: 100px;\n    height: 300px;\n    border: 1px solid red;\n    float: left;\n}\n```\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/f64200806b244ace8b7f58de6177a2b2.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n#### float浮动布局的特性\n\n##### 脱离文档流\n\n会使的元素“飘起来”，不占位\n\n例如：在float布局的元素下添加一个div，则此div会与float元素重叠\n\n```html\n 	<div class=\"container\">内容</div>\n    <div class=\"side\">侧栏</div>\n    <div class=\"box\"></div>\n```\n\n```css\n.container{\n    width: 300px;\n    height: 300px;\n    border: 1px solid red;\n    float: left;\n}\n.side{\n    width: 100px;\n    height: 300px;\n    border: 1px solid red;\n    float: left;\n}\n.box{\n    width: 500;\n    height: 300px;\n    background-color: yellow;\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/8d258d85ce62412eb60d30a24d2e7a32.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n\n#### 解决float元素不占位的方案\n\n##### 添加空div清除浮动\n\n**clear：both**\n\n```css\nclear:both\n```\n\n代码：\n\n```html\n    <div class=\"container\">内容</div>\n    <div class=\"side\">侧栏</div>\n    <div class=\"clear\"></div>\n    <div class=\"box\"></div>\n```\n\n```css\n.container{\n    width: 300px;\n    height: 300px;\n    border: 1px solid red;\n    float: left;\n}\n.side{\n    width: 100px;\n    height: 300px;\n    border: 1px solid red;\n    float: left;\n}\n.box{\n    width: 500;\n    height: 300px;\n    background-color: yellow;\n}\n.clear{\n    clear: both;\n}\n```\n\n![image20210806114811294.png](2)\n\n##### 利用伪元素选择器实现\n\n\n\n```css\n.clear::before,.clear::after{\n    display: block;\n    clear: both;\n    content: \'\';\n}\n```\n\n**可以避免繁琐的添加div，使得页面更加直观**\n\n', '31619', '957957209', '张振明', 'vue', '2021-08-09 17:36:25', NULL, 'public/static/blogCoverImage/dreamboy.png', NULL, 3, 1, 0);
INSERT INTO `blog` VALUES ('css学习笔记-css定位', '\n## 3.CSS定位\n\n![请添加图片描述](https://img-blog.csdnimg.cn/fd016efa1d994a918c9ee05bfffd9ea5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n### 绝对定位(absolute)\n\n#### 特性\n\n**脱离文档流**\n\n默认参照物为浏览器视窗的**左上角**\n\n```html\n   <div class=\"containner\">\n        <div class=\"box\">\n        1\n        </div>\n        <div class=\"box position\">\n        2\n        </div>\n        <div class=\"box fixed\">\n        3  \n        </div>\n    </div>\n```\n\n```css\n.position{\n    position: absolute;\n    left: 20%;\n    top: 20%;\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/9ef6798fb7eb4380af38e2fd43c2c690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n**以浏览器左上角为参照物**\n\n### 相对定位(relative)\n\n#### 特性\n\n**不脱离文档流**\n\n默认参照物为**此元素原位置**\n\n### 固定定位(fixed)\n\n**脱离文档流**\n\n默认参照物为浏览器**视窗位置**\n\n```html\n <div class=\"containner\">\n        <div class=\"box\">\n        1\n        </div>\n        <div class=\"box position\">\n        2\n        </div>\n        <div class=\"box fixed\">\n        3  \n        </div>\n    </div>\n```\n\n```css\n.fixed{\n    position: fixed;\n    left: 40%;\n    top: 0%;\n}\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/336b91a521c347bf8cd84e94d8612f71.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n\n默认参照物为浏览器**视窗位置**,不会随着滚动条的移动而移动 ', '78893', '957957209', '张振明', 'vue', '2021-08-09 17:37:40', NULL, 'public/static/blogCoverImage/baidu.jpeg', 1, 4, 2, 0);
INSERT INTO `blog` VALUES ('css学习笔记-css3新增样式', '## 4.CSS3新增样式\n![在这里插入图片描述](https://img-blog.csdnimg.cn/a851f80b4a6a4ee785017149b457eb0a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n### 圆角\n\n**border-radius**：左上 右上 右下 左下\n\n如果设置两个值，第一个值表示左上和右下，第二个值表示右上和左下\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/211b867659214f358e08f0423347563c.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n```html\n<div class=\"radius\"></div>\n```\n\n```css\n.radius{\n    height: 300px;\n    width: 300px;\n    background-color: red;\n    border: 1px solid black;\n    margin: 0 auto;\n}\n```\n\n![](https://img-blog.csdnimg.cn/8884d0d1a2eb4923ae2ddebbf2586889.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n\n在样式中添加 border-radius: 50%;\n\n```css\n.radius{\n    height: 300px;\n    width: 300px;\n    background-color: red;\n    border: 1px solid black;\n    margin: 0 auto;\n    border-radius: 50%; \n}\n```\n\n得到\n![在这里插入图片描述](https://img-blog.csdnimg.cn/daf25e99571a4921b36f746fc649f346.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n\n**将角度设置为50%可以得到圆形**\n\n### 阴影\n\n**box-shadow**: x轴偏移量 y轴偏移量 模糊半径 阴影颜色(不设置颜色默认为黑色)\n\nbox-shadow:10px 20px 30px blue\n\n```html\n<div class=\"box\"></div>\n```\n\n```css\n.box{\n        height: 300px;\n        width: 300px;\n        background-color: chartreuse;\n        margin: 0 auto;\n        border-radius: 50%;\n        /* box-shadow: 10px 10px 10px blue; */\n    }\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/541ffc5875584b21acff201e9b0d4750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n\n**添加box-shadow后：**\n\n```css\n.box{\n        height: 300px;\n        width: 300px;\n        background-color: chartreuse;\n        margin: 0 auto;\n        border-radius: 50%;\n        box-shadow: 10px 10px 10px blue;\n    }\n```\n\n![](https://img-blog.csdnimg.cn/64a39e48b0094637a7b42057a1bcf994.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n\n### 形变\n![在这里插入图片描述](https://img-blog.csdnimg.cn/7078713e8a1342f28d8fa195ad383141.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n#### 旋转(rotate)\n\n**旋转前:**\n\n```html\n<div class=\"transform\"></div>\n```\n\n```css\n   .transform{\n        width: 300px;\n        height: 300px;\n        margin: 0 auto;\n        background-color: red;\n    }\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/ef018eb8019540b88ce25b06239f3819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n\n**旋转后**:\n\n```css\n  .transform{\n        width: 300px;\n        height: 300px;\n        margin: 100px auto;\n        background-color: red;\n        transform: rotate(50deg);\n    }\n```\n\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/07422eef702f4917b720136c14a5f627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n\n#### 缩放(scale)\n\ntransform:scale(**倍数**)\n\n缩放前：\n\n```html\n<div class=\"transform\"></div>\n```\n\n```css\n  .transform{\n        width: 300px;\n        height: 300px;\n        margin: 100px auto;\n        background-color: red;\n        /* transform: rotate(50deg); */\n    }\n```\n\n![\\[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-I5mdNbUP-1628322338198)(E:\\cssStudy\\image\\image-20210807151931234.png)\\]](https://img-blog.csdnimg.cn/f6d2581138304ee196032bef5063a939.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n\n缩放后:\n![在这里插入图片描述](https://img-blog.csdnimg.cn/fa409a863ce8493388ca82ca17ab0c6d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n```css\n.transform{\n        width: 300px;\n        height: 300px;\n        margin: 100px auto;\n        background-color: red;\n        /* transform: rotate(50deg); */\n        /* 放大1.5倍 */\n        transform: scale(1.5);\n    }\n\n\n\n\n\n#### 位移(translate)\n\n**transform:translate(x坐标移动的距离,y坐标移动的距离)**\n\n**距离可以为像素值也可以为百分比**\n\n位移前:\n\n```html\n <div class=\"transform\"></div>\n```\n\n```css\n .transform{\n        width: 300px;\n        height: 300px;\n        margin: 100px auto;\n        background-color: red;\n        /* transform: rotate(50deg); */\n        /* 放大1.5倍 */\n        /* transform: scale(1.5); */\n        /* transform: translate(100px,100px); */\n    }\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/c519dba1f0354adfa5b7cca1dc15a6ae.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n\n位移后:\n\n```css\n    .transform{\n        width: 300px;\n        height: 300px;\n        margin: 100px auto;\n        background-color: red;\n        /* transform: rotate(50deg); */\n        /* 放大1.5倍 */\n        /* transform: scale(1.5); */\n        transform: translate(100px,100px);\n    }\n```\n![在这里插入图片描述](https://img-blog.csdnimg.cn/050406706ee34720a5e3c62f24817f9c.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n\n#### 使得div垂直水平居中的方法\n\n将元素设置为绝对定位，然后用偏移量位移\n\n**transform: translate(-50%,-50%);**\n\n```css\n .transform{\n        width: 300px;\n        height: 300px;\n        background-color: red;\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%,-50%);\n    }\n```\n\n![](https://img-blog.csdnimg.cn/383fbf073f1448e8bf4f5ed829f1dbb5.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xhb2xsYW9hb2xhbw==,size_16,color_FFFFFF,t_70)\n\n\n', '58283', '957957209', '张振明', 'vue', '2021-08-09 17:38:16', NULL, 'public/static/blogCoverImage/alibaba.webp', 1, 2, 1, 0);
INSERT INTO `blog` VALUES ('算法训练-整数除法', '# 整数除法\n\n## 题目描述\n\n给定两个整数 **a** 和 **b** ，求它们的除法的商 **a/b** ，要求不得使用乘号 \'*\'、除号 \'/\' 以及求余符号 \'%\' 。\n\n示例1:\n\n> ```\n> 输入：a = 15, b = 2\n> 输出：7\n> 解释：15/2 = truncate(7.5) = 7\n> ```\n\n示例2:\n\n> ```\n> 输入：a = 7, b = -3\n> 输出：0\n> 解释：7/-3 = truncate(-2.33333..) = -2\n> ```\n\n示例3:\n\n> ```\n> 输入：a = 0, b = 1\n> 输出：0\n> ```\n\n示例4:\n\n> ```\n> 输入：a = 1, b = 1\n> 输出：1\n> ```\n\n**提示**:-2^31<=a,b<=2^31-1,b!=0\n\n\n\n## 题目来源:\n\n> 剑指offer(专项突击版) [剑指offer|| 001]整数除法\n>\n> ```\n> https://leetcode-cn.com/problems/divide-two-integers/\n> ```\n\n## 题解\n\n> 设sum为a除以b的商,a和b的范围是-2^31~2^31,如果按照{a=a-b,sum++},当且仅当a>=b的思路时间复杂度太高，肯定会超时,所以我们应该时循环的次数变得尽可能的少。\n>\n> 我们可以让b1=b,task=1，累加(b1+b1),直到**b1+b1>a**,此时的b已经是a的**最大可除数**，记录b1累加的次数task，此时b1=task*b，再将a-b1,可以将a拆分成更小的数，将task重置为1,b1=b,继续执行上述操作，最终可以求出a除以b的商\n>\n> 设test =b,task=1,sum=0,重复执行此操作:b每次累加(b=b+b),task也累加(task=task+task),a=a-test,sum=sum+task,直到a<=test+test,操作结束.再对a和b的大小进行判断，如果此时a<b,则返回sum，如果a=b,返回sum+1\n>\n> 上述关系可以表示成:**(a-task1×b-task2×b-...taskn×b)/b+task1+task2+...taskn**\n>\n> 例如:a=60,b=13,a/b=(60-52)/13+4,sum=4.a=70,b=12,a/b=(70-48-12)/12+4+1\n>\n> \n\n```javascript\nvar divide = function(a, b) {\n    let num = a\n    let sum = 0\n    if(a>=0&&b>0){\n        if(a>=Math.pow(2,31)-1&&b==1){\n            return Math.pow(2,31)-1\n        }\n        for(let i=1;i;i++){\n            let test = b\n            let task = 1\n            if(a<b){\n                return sum\n            }\n            if(a==b){\n                return sum+1\n            }\n            while(a>test+test){\n                test+=test\n                task+=task\n            }\n            a-=test\n            sum+=task\n            }\n    }else if(a<=0&&b<0){\n        if(a<=-Math.pow(2,31)&&b==-1){\n            return Math.pow(2,31)-1\n        }\n        for(let i=1;i;i++){\n            let test = -b\n            let task = 1\n            if(-a<-b){\n                return sum\n            }\n            if(a==b){\n                return sum+1\n            }\n            while(-a>test+test){\n                test+=test\n                task+=task\n            }\n            a+=test\n            sum+=task\n        }\n    }else if(a>=0&&b<0){\n        if(a>=Math.pow(2,31)-1&&b==-1){\n            return Math.pow(2,31)-1\n        }\n        for(let i=1;i;i++){\n            let test = b\n            let task = 1\n            if(a<-b){\n                return -sum\n            }\n            if(a==-b){\n                return -sum-1\n            }\n            while(a>Math.abs(test+test)){\n                test+=test\n                task+=task\n            }\n            a+=test\n            sum+=task\n        }\n    }else if(a<=0&&b>0){\n        if(a<-Math.pow(2,31)&&b==1){\n            return Math.pow(2,31)-1\n        }\n        for(let i=1;i;i++){\n            let test = b\n            let task = 1\n\n            if(-a<b){\n                return -sum\n            }\n            if(-a==b){\n                return -sum-1\n            }\n            while(-a>test+test){\n                test+=test\n                task+=task\n            }\n            a+=test\n            sum+=task\n        }\n    }\n\n};\n```\n\n**加油**', '82332', '957957209', '张振明', 'vue', '2021-08-09 20:27:23', NULL, 'public/static/blogCoverImage/ByteDance.webp', NULL, 2, 1, 0);
INSERT INTO `blog` VALUES ('图片测试', '![QQ二维码.jpg](http://211.69.238.167:8090/public/static/blogImage/QQ二维码.jpg)', '75314', '957957209', 'DanceInBytes', 'vue,js', '2021-09-25 15:45:37', 0, 'public/static/blogCoverImage/baidu.jpeg', 1, NULL, 0, 0);
INSERT INTO `blog` VALUES ('teeeee', '撒大苏打大苏打', '31689', '957957209', 'DanceInByte', 'vue,js', '2021-10-03 19:33:32', 1, 'public/static/blogCoverImage/ByteDance.webp', 1, 2, 1, 0);
INSERT INTO `blog` VALUES ('啊啊啊啊', '啊啊啊啊', '21195', '957957209', 'DanceInByte', 'vue,js', '2021-10-17 14:47:53', 1, 'public/static/blogCoverImage/tencent.jpeg', 1, NULL, 0, 0);
INSERT INTO `blog` VALUES ('洒洒水', 'resr', '92345', '957957209', 'DanceInByte', 'vue,js', '2021-10-17 15:07:05', 1, 'public/static/blogCoverImage/baidu.jpeg', 1, NULL, 0, 0);

-- ----------------------------
-- Table structure for blog_comment
-- ----------------------------
DROP TABLE IF EXISTS `blog_comment`;
CREATE TABLE `blog_comment`  (
  `comment_id` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `comment_content` varchar(500) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `comment_time` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `comment_user_id` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `blog_id` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  PRIMARY KEY (`comment_id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of blog_comment
-- ----------------------------

-- ----------------------------
-- Table structure for blog_like
-- ----------------------------
DROP TABLE IF EXISTS `blog_like`;
CREATE TABLE `blog_like`  (
  `user_id` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `blog_id` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `like_time` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `like_state` int NOT NULL DEFAULT 1
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of blog_like
-- ----------------------------
INSERT INTO `blog_like` VALUES ('957957209', '31689', '2021-11-27 16:53:26', 1);
INSERT INTO `blog_like` VALUES ('957957209', '75314', '2021-11-10 21:51:38', 0);
INSERT INTO `blog_like` VALUES ('957957209', '58283', '2021-10-17 13:25:34', 1);
INSERT INTO `blog_like` VALUES ('957957209', '78893', '2021-10-16 21:23:42', 1);
INSERT INTO `blog_like` VALUES ('957957209', '31619', '2021-10-14 21:06:10', 0);
INSERT INTO `blog_like` VALUES ('921812946', '78893', '2021-10-14 21:00:08', 1);
INSERT INTO `blog_like` VALUES ('921812946', '31619', '2021-10-14 21:00:09', 1);
INSERT INTO `blog_like` VALUES ('957957209', '78389', '2021-10-14 21:06:09', 1);
INSERT INTO `blog_like` VALUES ('957957209', '93964', '2021-10-14 21:10:56', 1);
INSERT INTO `blog_like` VALUES ('957957209', '82332', '2021-11-10 21:51:43', 1);
INSERT INTO `blog_like` VALUES ('957957209', '77597', '2021-10-17 11:30:32', 1);

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user`  (
  `user_pass_word` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `user_gender` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `user_birthday` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `user_id` varchar(18) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `user_nick_name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `user_head_portrait` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `user_true_name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `user_self_intro` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `user_state` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES ('123', '男', '', '534185212', '哔哔赖赖zzm', 'public/static/headPortrait/dreamboy.png', NULL, '我爱哔哔赖赖', '1');
INSERT INTO `user` VALUES ('123', '女', '2021-02-11', '957957209', 'DanceInByte', 'public/static/headPortrait/boy.jpg', '张振明', '我是大傻猪\n', '1');
INSERT INTO `user` VALUES ('123456', NULL, NULL, '921812946', '张哥123', 'public/static/headPortrait/dreamboy.png', NULL, NULL, '1');
INSERT INTO `user` VALUES ('123456', NULL, NULL, '294694191', '张哥123', 'public/static/headPortrait/dreamboy.png', NULL, NULL, '1');
INSERT INTO `user` VALUES ('132', NULL, NULL, '366548742', '957957209', NULL, NULL, NULL, '1');

SET FOREIGN_KEY_CHECKS = 1;
